<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zto.dao.UserInfoMap">

    <resultMap type="com.zto.entity.UserInfo" id="userInfoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userUrl" column="user_url" jdbcType="VARCHAR"/>
        <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--通过用户名查询单个-->
    <select id="getUserInfoByUserName" resultMap="userInfoMap">
        select id,
               user_name,
               user_url,
               user_password
        from user_info
        where user_name = #{userName}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="userInfoMap">
        select id,
               user_name,
               user_url,
               user_password
        from user_info
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="userInfoMap">
        select
        id, user_name, user_url, user_password
        from user_info
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userUrl != null and userUrl != ''">
                and user_url = #{userUrl}
            </if>
            <if test="userPassword != null and userPassword != ''">
                and user_password = #{userPassword}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user_info
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userUrl != null and userUrl != ''">
                and user_url = #{userUrl}
            </if>
            <if test="userPassword != null and userPassword != ''">
                and user_password = #{userPassword}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_info(user_name, user_url, user_password)
        values (#{userName}, #{userUrl}, #{userPassword})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_info(user_name, user_url, user_password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.userUrl}, #{entity.userPassword})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_info(user_name, user_url, user_password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.userUrl}, #{entity.userPassword})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        user_url = values(user_url),
        user_password = values(user_password)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user_info
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userUrl != null and userUrl != ''">
                user_url = #{userUrl},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user_info
        where id = #{id}
    </delete>

</mapper>

